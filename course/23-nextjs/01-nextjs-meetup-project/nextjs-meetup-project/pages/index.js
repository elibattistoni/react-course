import { useEffect, useState } from "react";
import MeetupList from "../components/meetups/MeetupList";

const DUMMY_MEETUPS = [
  {
    id: "m1",
    title: "First Meetup in Salzburg",
    image:
      "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Salzburg_%2848489551981%29.jpg/1920px-Salzburg_%2848489551981%29.jpg",
    address: "Salzburg, 5020 Austria",
  },
  {
    id: "m2",
    title: "Second Meetup in Salzburg",
    image:
      "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Salzburg_%2848489551981%29.jpg/1920px-Salzburg_%2848489551981%29.jpg",
    address: "Salzburg, 5020 Austria",
  },
];

const HomePage = () => {
  const [loadedMeetups, setLoadedMeetups] = useState([]);

  //| VERY IMPORTANT: useEffect runs the function inside it AFTER the component function was executed
  //| NB this means that the first time the HomePage component is rendered, loadedMeetups will be an empty array
  //| then the effect function will be executed, and then the component function will be executed again because the state changed (within the effect function)
  //| and then it will re-render the list with the actual data
  //| NB and since there are these 2 render cycles, we have a problem with SEO (Search Engine Optimization)
  //| because the pre-rendered HTML page generated by NextJS automatically does not wait for the second rerender cycle
  //| (it always takes the first rendering cycle result and returns that as the pre-rendered HTML code)
  //| NB so we have a problem (and NextJS has the solution): i.e we want to pre-render a page with data, but for data that we have to wait for
  //| and we need to tell NextJS once we are done waiting
  //| NB HOW TO FETCH DATA FOR PRE-RENDERING
  useEffect(() => {
    // send HTTP request and fetch data
    setLoadedMeetups(DUMMY_MEETUPS);
  }, []);

  return <MeetupList meetups={loadedMeetups}></MeetupList>;
};

export default HomePage;
